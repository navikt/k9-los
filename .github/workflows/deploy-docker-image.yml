name: Deploy Docker image
on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENCE'
      - 'deploy/k9-los-oidc-auth-proxy-dev.yml'
      - 'deploy/k9-los-oidc-auth-proxy-redis.yml'
      - 'deploy/k9-los-oidc-auth-proxy-redis-exporter.yml'

env:
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/k9-los-web
jobs:
  deploy-dev-fss:
    name: Deploy til testmiljÃ¸
    if: startsWith(github.ref, 'refs/heads/dev') || startsWith(github.ref, 'refs/heads/master') # Deploy if branch is either master or dev-*
    runs-on: ubuntu-latest
    steps:
      - name: Hente kode
        uses: actions/checkout@v2
      - name: Sette opp Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Installere dependencies
        run: yarn install --ignore-optional --no-progress --frozen-lockfile
      - name: Tester og linting
        run: yarn test && yarn less:lint
      - name: Bygge dist
        run: yarn build
      - name: Sette Docker-navn og -tag
        env:
          DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/k9-los-web
        run: |
          echo $DOCKER_IMAGE > .docker_image
          echo "$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)" > .docker_tag
          echo "IMAGE=${IMAGE}$(cat .docker_image):$(cat .docker_tag)" >> $GITHUB_ENV
      - name: Bygg og laste opp docker-image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            docker build --tag ${IMAGE} --tag ${BASE_IMAGE}:latest .
            docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
            docker push $BASE_IMAGE:latest
            docker push $IMAGE
      - name: Trigger verdikjede test
        if: success()
        shell: bash
        run: |
          curl -XPOST -u "x-access-token:${{secrets.GITHUB_ACCESS_TOKEN}}" \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Content-Type: application/json" \
          https://api.github.com/repos/navikt/k9-verdikjede/dispatches \
          --data '{"event_type": "saksbehandling-verdikjede",
                   "client_payload": {
                      "trigger": "${{ github.repository }}",
                      "version": "${{ env.TAG }}",
                      "image": "${{ env.IMAGE }}"
                  }}'
      - name: Deploy
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.DEPLOY_KEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/dev-fss.yml

  deploy-prod-fss:
    name: Deploy til prod
    if: startsWith(github.ref, 'refs/heads/master') # If the branch is master
    runs-on: ubuntu-latest
    steps:
      - name: Hente kode
        uses: actions/checkout@v2
      - name: Sette opp Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Installere dependencies
        run: yarn install --ignore-optional --no-progress --frozen-lockfile
      - name: Tester og linting
        run: yarn test && yarn less:lint
      - name: Bygge dist
        run: yarn build
      - name: Sette Docker-navn og -tag
        env:
          DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/k9-los-web
        run: |
          echo $DOCKER_IMAGE > .docker_image
          echo "$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)" > .docker_tag
          echo "IMAGE=${IMAGE}$(cat .docker_image):$(cat .docker_tag)" >> $GITHUB_ENV
      - name: Bygg og laste opp docker-image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            docker build --tag ${IMAGE} --tag ${BASE_IMAGE}:latest .
            docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
            docker push $BASE_IMAGE:latest
            docker push $IMAGE
      - name: Trigger verdikjede test
        if: success()
        shell: bash
        run: |
          curl -XPOST -u "x-access-token:${{secrets.GITHUB_ACCESS_TOKEN}}" \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Content-Type: application/json" \
          https://api.github.com/repos/navikt/k9-verdikjede/dispatches \
          --data '{"event_type": "saksbehandling-verdikjede",
                   "client_payload": {
                      "trigger": "${{ github.repository }}",
                      "version": "${{ env.TAG }}",
                      "image": "${{ env.IMAGE }}"
                  }}'
      - name: Deploy
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.DEPLOY_KEY }}
          CLUSTER: prod-fss
          RESOURCE: deploy/prod-fss.yml



